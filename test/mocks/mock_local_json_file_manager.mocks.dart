// Mocks generated by Mockito 5.4.6 from annotations
// in streamkeys/test/mocks/mock_local_json_file_manager.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:streamkeys/desktop/utils/local_json_file_manager.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalJsonFileManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalJsonFileManager extends _i1.Mock
    implements _i2.LocalJsonFileManager {
  MockLocalJsonFileManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get filePath => (super.noSuchMethod(
        Invocation.getter(#filePath),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#filePath),
        ),
      ) as String);

  @override
  bool get isAsset => (super.noSuchMethod(
        Invocation.getter(#isAsset),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<Map<String, dynamic>?> read() => (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<void> save(Map<String, dynamic>? json) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [json],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
