// Mocks generated by Mockito 5.4.6 from annotations
// in streamkeys/test/obs/obs_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:loggy/loggy.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:obs_websocket/obs_websocket.dart' as _i2;
import 'package:obs_websocket/request.dart' as _i4;
import 'package:streamkeys/desktop/features/obs/data/models/obs_connection_data.dart'
    as _i7;
import 'package:streamkeys/desktop/features/obs/data/services/obs_secure_storage.dart'
    as _i6;
import 'package:streamkeys/desktop/features/obs/data/services/obs_web_socket_factory.dart'
    as _i9;
import 'package:web_socket_channel/web_socket_channel.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeObsWebSocket_0 extends _i1.SmartFake implements _i2.ObsWebSocket {
  _FakeObsWebSocket_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketChannel_1 extends _i1.SmartFake
    implements _i3.WebSocketChannel {
  _FakeWebSocketChannel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFromJsonSingleton_2 extends _i1.SmartFake
    implements _i2.FromJsonSingleton {
  _FakeFromJsonSingleton_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfig_3 extends _i1.SmartFake implements _i4.Config {
  _FakeConfig_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFilters_4 extends _i1.SmartFake implements _i4.Filters {
  _FakeFilters_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneral_5 extends _i1.SmartFake implements _i4.General {
  _FakeGeneral_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInputs_6 extends _i1.SmartFake implements _i4.Inputs {
  _FakeInputs_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMediaInputs_7 extends _i1.SmartFake implements _i4.MediaInputs {
  _FakeMediaInputs_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOutputs_8 extends _i1.SmartFake implements _i4.Outputs {
  _FakeOutputs_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecord_9 extends _i1.SmartFake implements _i4.Record {
  _FakeRecord_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScenes_10 extends _i1.SmartFake implements _i4.Scenes {
  _FakeScenes_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSceneItems_11 extends _i1.SmartFake implements _i4.SceneItems {
  _FakeSceneItems_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSources_12 extends _i1.SmartFake implements _i4.Sources {
  _FakeSources_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStream_13 extends _i1.SmartFake implements _i4.Stream {
  _FakeStream_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransitions_14 extends _i1.SmartFake implements _i4.Transitions {
  _FakeTransitions_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUi_15 extends _i1.SmartFake implements _i4.Ui {
  _FakeUi_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoggy_16<T extends _i5.LoggyType> extends _i1.SmartFake
    implements _i5.Loggy<T> {
  _FakeLoggy_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestBatchResponse_17 extends _i1.SmartFake
    implements _i2.RequestBatchResponse {
  _FakeRequestBatchResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVersionResponse_18 extends _i1.SmartFake
    implements _i2.VersionResponse {
  _FakeVersionResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStatsResponse_19 extends _i1.SmartFake implements _i2.StatsResponse {
  _FakeStatsResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCallVendorRequestResponse_20 extends _i1.SmartFake
    implements _i2.CallVendorRequestResponse {
  _FakeCallVendorRequestResponse_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ObsSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockObsSecureStorage extends _i1.Mock implements _i6.ObsSecureStorage {
  MockObsSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set cachedDataForTest(_i7.ObsConnectionData? data) => super.noSuchMethod(
        Invocation.setter(
          #cachedDataForTest,
          data,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<_i7.ObsConnectionData?> loadConnectionData() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadConnectionData,
          [],
        ),
        returnValue: _i8.Future<_i7.ObsConnectionData?>.value(),
      ) as _i8.Future<_i7.ObsConnectionData?>);

  @override
  _i8.Future<void> updateConnectionData(
          {required _i7.ObsConnectionData? newData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConnectionData,
          [],
          {#newData: newData},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [ObsWebSocketFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockObsWebSocketFactory extends _i1.Mock
    implements _i9.ObsWebSocketFactory {
  MockObsWebSocketFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.ObsWebSocket> connect(
    String? url, {
    required String? password,
    required void Function(_i2.Event)? fallbackEventHandler,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [url],
          {
            #password: password,
            #fallbackEventHandler: fallbackEventHandler,
          },
        ),
        returnValue: _i8.Future<_i2.ObsWebSocket>.value(_FakeObsWebSocket_0(
          this,
          Invocation.method(
            #connect,
            [url],
            {
              #password: password,
              #fallbackEventHandler: fallbackEventHandler,
            },
          ),
        )),
      ) as _i8.Future<_i2.ObsWebSocket>);
}

/// A class which mocks [ObsWebSocket].
///
/// See the documentation for Mockito's code generation for more information.
class MockObsWebSocket extends _i1.Mock implements _i2.ObsWebSocket {
  MockObsWebSocket() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.WebSocketChannel get websocketChannel => (super.noSuchMethod(
        Invocation.getter(#websocketChannel),
        returnValue: _FakeWebSocketChannel_1(
          this,
          Invocation.getter(#websocketChannel),
        ),
      ) as _i3.WebSocketChannel);

  @override
  _i8.Stream<dynamic> get broadcastStream => (super.noSuchMethod(
        Invocation.getter(#broadcastStream),
        returnValue: _i8.Stream<dynamic>.empty(),
      ) as _i8.Stream<dynamic>);

  @override
  List<Function> get fallbackHandlers => (super.noSuchMethod(
        Invocation.getter(#fallbackHandlers),
        returnValue: <Function>[],
      ) as List<Function>);

  @override
  Map<String, List<Function>> get eventHandlers => (super.noSuchMethod(
        Invocation.getter(#eventHandlers),
        returnValue: <String, List<Function>>{},
      ) as Map<String, List<Function>>);

  @override
  _i2.FromJsonSingleton get fromJsonSingleton => (super.noSuchMethod(
        Invocation.getter(#fromJsonSingleton),
        returnValue: _FakeFromJsonSingleton_2(
          this,
          Invocation.getter(#fromJsonSingleton),
        ),
      ) as _i2.FromJsonSingleton);

  @override
  bool get handshakeComplete => (super.noSuchMethod(
        Invocation.getter(#handshakeComplete),
        returnValue: false,
      ) as bool);

  @override
  int get messageId => (super.noSuchMethod(
        Invocation.getter(#messageId),
        returnValue: 0,
      ) as int);

  @override
  int get negotiatedRpcVersion => (super.noSuchMethod(
        Invocation.getter(#negotiatedRpcVersion),
        returnValue: 0,
      ) as int);

  @override
  _i4.Config get config => (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue: _FakeConfig_3(
          this,
          Invocation.getter(#config),
        ),
      ) as _i4.Config);

  @override
  _i4.Filters get filters => (super.noSuchMethod(
        Invocation.getter(#filters),
        returnValue: _FakeFilters_4(
          this,
          Invocation.getter(#filters),
        ),
      ) as _i4.Filters);

  @override
  _i4.General get general => (super.noSuchMethod(
        Invocation.getter(#general),
        returnValue: _FakeGeneral_5(
          this,
          Invocation.getter(#general),
        ),
      ) as _i4.General);

  @override
  _i4.Inputs get inputs => (super.noSuchMethod(
        Invocation.getter(#inputs),
        returnValue: _FakeInputs_6(
          this,
          Invocation.getter(#inputs),
        ),
      ) as _i4.Inputs);

  @override
  _i4.MediaInputs get mediaInputs => (super.noSuchMethod(
        Invocation.getter(#mediaInputs),
        returnValue: _FakeMediaInputs_7(
          this,
          Invocation.getter(#mediaInputs),
        ),
      ) as _i4.MediaInputs);

  @override
  _i4.Outputs get outputs => (super.noSuchMethod(
        Invocation.getter(#outputs),
        returnValue: _FakeOutputs_8(
          this,
          Invocation.getter(#outputs),
        ),
      ) as _i4.Outputs);

  @override
  _i4.Record get record => (super.noSuchMethod(
        Invocation.getter(#record),
        returnValue: _FakeRecord_9(
          this,
          Invocation.getter(#record),
        ),
      ) as _i4.Record);

  @override
  _i4.Scenes get scenes => (super.noSuchMethod(
        Invocation.getter(#scenes),
        returnValue: _FakeScenes_10(
          this,
          Invocation.getter(#scenes),
        ),
      ) as _i4.Scenes);

  @override
  _i4.SceneItems get sceneItems => (super.noSuchMethod(
        Invocation.getter(#sceneItems),
        returnValue: _FakeSceneItems_11(
          this,
          Invocation.getter(#sceneItems),
        ),
      ) as _i4.SceneItems);

  @override
  _i4.Sources get sources => (super.noSuchMethod(
        Invocation.getter(#sources),
        returnValue: _FakeSources_12(
          this,
          Invocation.getter(#sources),
        ),
      ) as _i4.Sources);

  @override
  _i4.Stream get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _FakeStream_13(
          this,
          Invocation.getter(#stream),
        ),
      ) as _i4.Stream);

  @override
  _i4.Transitions get transitions => (super.noSuchMethod(
        Invocation.getter(#transitions),
        returnValue: _FakeTransitions_14(
          this,
          Invocation.getter(#transitions),
        ),
      ) as _i4.Transitions);

  @override
  _i4.Ui get ui => (super.noSuchMethod(
        Invocation.getter(#ui),
        returnValue: _FakeUi_15(
          this,
          Invocation.getter(#ui),
        ),
      ) as _i4.Ui);

  @override
  set handshakeComplete(bool? _handshakeComplete) => super.noSuchMethod(
        Invocation.setter(
          #handshakeComplete,
          _handshakeComplete,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set messageId(int? _messageId) => super.noSuchMethod(
        Invocation.setter(
          #messageId,
          _messageId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Loggy<_i5.UiLoggy> get loggy => (super.noSuchMethod(
        Invocation.getter(#loggy),
        returnValue: _FakeLoggy_16<_i5.UiLoggy>(
          this,
          Invocation.getter(#loggy),
        ),
      ) as _i5.Loggy<_i5.UiLoggy>);

  @override
  _i8.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> authenticate() => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i2.Opcode?> getStreamOpcode(int? webSocketOpCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStreamOpcode,
          [webSocketOpCode],
        ),
        returnValue: _i8.Future<_i2.Opcode?>.value(),
      ) as _i8.Future<_i2.Opcode?>);

  @override
  _i8.Future<_i2.Opcode?> sendOpcode(_i2.Opcode? opcode) => (super.noSuchMethod(
        Invocation.method(
          #sendOpcode,
          [opcode],
        ),
        returnValue: _i8.Future<_i2.Opcode?>.value(),
      ) as _i8.Future<_i2.Opcode?>);

  @override
  _i8.Future<void> listenForMask(int? eventSubscriptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenForMask,
          [eventSubscriptions],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> listen(dynamic eventSubscription) => (super.noSuchMethod(
        Invocation.method(
          #listen,
          [eventSubscription],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> subscribe(_i2.EventSubscription? eventSubscription) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [eventSubscription],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void addHandler<T>(Function? listener) => super.noSuchMethod(
        Invocation.method(
          #addHandler,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeHandler<T>(Function? listener) => super.noSuchMethod(
        Invocation.method(
          #removeHandler,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addFallbackListener(Function? listener) => super.noSuchMethod(
        Invocation.method(
          #addFallbackListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFallbackListener(Function? listener) => super.noSuchMethod(
        Invocation.method(
          #removeFallbackListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<_i2.RequestResponse?> send(
    String? command, [
    Map<String, dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [
            command,
            args,
          ],
        ),
        returnValue: _i8.Future<_i2.RequestResponse?>.value(),
      ) as _i8.Future<_i2.RequestResponse?>);

  @override
  _i8.Future<_i2.RequestBatchResponse> sendBatch(List<_i2.Request>? requests) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendBatch,
          [requests],
        ),
        returnValue: _i8.Future<_i2.RequestBatchResponse>.value(
            _FakeRequestBatchResponse_17(
          this,
          Invocation.method(
            #sendBatch,
            [requests],
          ),
        )),
      ) as _i8.Future<_i2.RequestBatchResponse>);

  @override
  _i8.Future<_i2.RequestResponse?> sendRequest(_i2.Request? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendRequest,
          [request],
        ),
        returnValue: _i8.Future<_i2.RequestResponse?>.value(),
      ) as _i8.Future<_i2.RequestResponse?>);
}

/// A class which mocks [General].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeneral extends _i1.Mock implements _i4.General {
  MockGeneral() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ObsWebSocket get obsWebSocket => (super.noSuchMethod(
        Invocation.getter(#obsWebSocket),
        returnValue: _FakeObsWebSocket_0(
          this,
          Invocation.getter(#obsWebSocket),
        ),
      ) as _i2.ObsWebSocket);

  @override
  _i8.Future<_i2.VersionResponse> get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue:
            _i8.Future<_i2.VersionResponse>.value(_FakeVersionResponse_18(
          this,
          Invocation.getter(#version),
        )),
      ) as _i8.Future<_i2.VersionResponse>);

  @override
  _i8.Future<_i2.StatsResponse> get stats => (super.noSuchMethod(
        Invocation.getter(#stats),
        returnValue: _i8.Future<_i2.StatsResponse>.value(_FakeStatsResponse_19(
          this,
          Invocation.getter(#stats),
        )),
      ) as _i8.Future<_i2.StatsResponse>);

  @override
  _i8.Future<List<String>> get hotkeyList => (super.noSuchMethod(
        Invocation.getter(#hotkeyList),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<_i2.VersionResponse> getVersion() => (super.noSuchMethod(
        Invocation.method(
          #getVersion,
          [],
        ),
        returnValue:
            _i8.Future<_i2.VersionResponse>.value(_FakeVersionResponse_18(
          this,
          Invocation.method(
            #getVersion,
            [],
          ),
        )),
      ) as _i8.Future<_i2.VersionResponse>);

  @override
  _i8.Future<_i2.StatsResponse> getStats() => (super.noSuchMethod(
        Invocation.method(
          #getStats,
          [],
        ),
        returnValue: _i8.Future<_i2.StatsResponse>.value(_FakeStatsResponse_19(
          this,
          Invocation.method(
            #getStats,
            [],
          ),
        )),
      ) as _i8.Future<_i2.StatsResponse>);

  @override
  _i8.Future<void> broadcastCustomEvent(Map<String, dynamic>? arg) =>
      (super.noSuchMethod(
        Invocation.method(
          #broadcastCustomEvent,
          [arg],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i2.CallVendorRequestResponse> callVendorRequest({
    required String? vendorName,
    required String? requestType,
    _i2.RequestData? requestData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #callVendorRequest,
          [],
          {
            #vendorName: vendorName,
            #requestType: requestType,
            #requestData: requestData,
          },
        ),
        returnValue: _i8.Future<_i2.CallVendorRequestResponse>.value(
            _FakeCallVendorRequestResponse_20(
          this,
          Invocation.method(
            #callVendorRequest,
            [],
            {
              #vendorName: vendorName,
              #requestType: requestType,
              #requestData: requestData,
            },
          ),
        )),
      ) as _i8.Future<_i2.CallVendorRequestResponse>);

  @override
  _i8.Future<_i2.CallVendorRequestResponse> obsBrowserEvent({
    required String? eventName,
    dynamic eventData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #obsBrowserEvent,
          [],
          {
            #eventName: eventName,
            #eventData: eventData,
          },
        ),
        returnValue: _i8.Future<_i2.CallVendorRequestResponse>.value(
            _FakeCallVendorRequestResponse_20(
          this,
          Invocation.method(
            #obsBrowserEvent,
            [],
            {
              #eventName: eventName,
              #eventData: eventData,
            },
          ),
        )),
      ) as _i8.Future<_i2.CallVendorRequestResponse>);

  @override
  _i8.Future<List<String>> getHotkeyList() => (super.noSuchMethod(
        Invocation.method(
          #getHotkeyList,
          [],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> triggerHotkeyByName(String? hotkeyName) =>
      (super.noSuchMethod(
        Invocation.method(
          #triggerHotkeyByName,
          [hotkeyName],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> triggerHotkeyByKeySequence({
    String? keyId,
    _i2.KeyModifiers? keyModifiers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #triggerHotkeyByKeySequence,
          [],
          {
            #keyId: keyId,
            #keyModifiers: keyModifiers,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sleep({
    int? sleepMillis,
    int? sleepFrames,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sleep,
          [],
          {
            #sleepMillis: sleepMillis,
            #sleepFrames: sleepFrames,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [StatsResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockStatsResponse extends _i1.Mock implements _i2.StatsResponse {
  MockStatsResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  num get cpuUsage => (super.noSuchMethod(
        Invocation.getter(#cpuUsage),
        returnValue: 0,
      ) as num);

  @override
  num get memoryUsage => (super.noSuchMethod(
        Invocation.getter(#memoryUsage),
        returnValue: 0,
      ) as num);

  @override
  num get availableDiskSpace => (super.noSuchMethod(
        Invocation.getter(#availableDiskSpace),
        returnValue: 0,
      ) as num);

  @override
  num get activeFps => (super.noSuchMethod(
        Invocation.getter(#activeFps),
        returnValue: 0,
      ) as num);

  @override
  num get averageFrameRenderTime => (super.noSuchMethod(
        Invocation.getter(#averageFrameRenderTime),
        returnValue: 0,
      ) as num);

  @override
  num get renderSkippedFrames => (super.noSuchMethod(
        Invocation.getter(#renderSkippedFrames),
        returnValue: 0,
      ) as num);

  @override
  num get renderTotalFrames => (super.noSuchMethod(
        Invocation.getter(#renderTotalFrames),
        returnValue: 0,
      ) as num);

  @override
  num get outputSkippedFrames => (super.noSuchMethod(
        Invocation.getter(#outputSkippedFrames),
        returnValue: 0,
      ) as num);

  @override
  num get outputTotalFrames => (super.noSuchMethod(
        Invocation.getter(#outputTotalFrames),
        returnValue: 0,
      ) as num);

  @override
  num get webSocketSessionIncomingMessages => (super.noSuchMethod(
        Invocation.getter(#webSocketSessionIncomingMessages),
        returnValue: 0,
      ) as num);

  @override
  num get webSocketSessionOutgoingMessages => (super.noSuchMethod(
        Invocation.getter(#webSocketSessionOutgoingMessages),
        returnValue: 0,
      ) as num);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
