// Mocks generated by Mockito 5.4.6 from annotations
// in streamkeys/test/streamerbot/streamerbot_connection_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:streamkeys/common/models/connection_status.dart' as _i6;
import 'package:streamkeys/desktop/features/streamerbot/data/models/streamerbot_connection_data.dart'
    as _i3;
import 'package:streamkeys/desktop/features/streamerbot/data/services/streamerbot_web_socket.dart'
    as _i2;
import 'package:streamkeys/service_locator.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStreamerBotWebSocket_0 extends _i1.SmartFake
    implements _i2.StreamerBotWebSocket {
  _FakeStreamerBotWebSocket_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamerBotConnectionData_1 extends _i1.SmartFake
    implements _i3.StreamerBotConnectionData {
  _FakeStreamerBotConnectionData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StreamerBotService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStreamerBotService extends _i1.Mock
    implements _i4.StreamerBotService {
  MockStreamerBotService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.StreamerBotWebSocket get webSocket => (super.noSuchMethod(
        Invocation.getter(#webSocket),
        returnValue: _FakeStreamerBotWebSocket_0(
          this,
          Invocation.getter(#webSocket),
        ),
      ) as _i2.StreamerBotWebSocket);

  @override
  _i5.Stream<_i6.ConnectionStatus> get connectionStream => (super.noSuchMethod(
        Invocation.getter(#connectionStream),
        returnValue: _i5.Stream<_i6.ConnectionStatus>.empty(),
      ) as _i5.Stream<_i6.ConnectionStatus>);

  @override
  _i6.ConnectionStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i6.ConnectionStatus.notConnected,
      ) as _i6.ConnectionStatus);

  @override
  _i5.Future<void> autoConnect() => (super.noSuchMethod(
        Invocation.method(
          #autoConnect,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> connect({_i3.StreamerBotConnectionData? data}) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {#data: data},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> reconnect({
    _i3.StreamerBotConnectionData? data,
    bool? force = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reconnect,
          [],
          {
            #data: data,
            #force: force,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.StreamerBotConnectionData> loadData() => (super.noSuchMethod(
        Invocation.method(
          #loadData,
          [],
        ),
        returnValue: _i5.Future<_i3.StreamerBotConnectionData>.value(
            _FakeStreamerBotConnectionData_1(
          this,
          Invocation.method(
            #loadData,
            [],
          ),
        )),
      ) as _i5.Future<_i3.StreamerBotConnectionData>);
}
