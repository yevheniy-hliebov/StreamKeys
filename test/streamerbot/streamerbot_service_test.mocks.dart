// Mocks generated by Mockito 5.4.6 from annotations
// in streamkeys/test/streamerbot/streamerbot_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:streamkeys/core/storage/generic_secure_storage.dart' as _i5;
import 'package:streamkeys/core/storage/secure_storable.dart' as _i4;
import 'package:streamkeys/desktop/features/streamerbot/data/models/do_action_response.dart'
    as _i3;
import 'package:streamkeys/desktop/features/streamerbot/data/models/get_actions_response.dart'
    as _i2;
import 'package:streamkeys/desktop/features/streamerbot/data/models/streamerbot_action.dart'
    as _i9;
import 'package:streamkeys/desktop/features/streamerbot/data/services/streamerbot_web_socket.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetActionsResponse_0 extends _i1.SmartFake
    implements _i2.GetActionsResponse {
  _FakeGetActionsResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDoActionResponse_1 extends _i1.SmartFake
    implements _i3.DoActionResponse {
  _FakeDoActionResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GenericSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenericSecureStorage<T extends _i4.SecureStorable> extends _i1.Mock
    implements _i5.GenericSecureStorage<T> {
  MockGenericSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  T Function() get emptyInstance => (super.noSuchMethod(
        Invocation.getter(#emptyInstance),
        returnValue: () => _i6.dummyValue<T>(
          this,
          Invocation.getter(#emptyInstance),
        ),
      ) as T Function());

  @override
  T Function(Map<String, String>) get fromMap => (super.noSuchMethod(
        Invocation.getter(#fromMap),
        returnValue: (Map<String, String> __p0) => _i6.dummyValue<T>(
          this,
          Invocation.getter(#fromMap),
        ),
      ) as T Function(Map<String, String>));

  @override
  set cachedDataForTest(T? data) => super.noSuchMethod(
        Invocation.setter(
          #cachedDataForTest,
          data,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T?> loadConnectionData() => (super.noSuchMethod(
        Invocation.method(
          #loadConnectionData,
          [],
        ),
        returnValue: _i7.Future<T?>.value(),
      ) as _i7.Future<T?>);

  @override
  _i7.Future<void> updateConnectionData({required T? newData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConnectionData,
          [],
          {#newData: newData},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [StreamerBotWebSocket].
///
/// See the documentation for Mockito's code generation for more information.
class MockStreamerBotWebSocket extends _i1.Mock
    implements _i8.StreamerBotWebSocket {
  MockStreamerBotWebSocket() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get generatedId => (super.noSuchMethod(
        Invocation.getter(#generatedId),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#generatedId),
        ),
      ) as String);

  @override
  _i7.Future<void> connect(
    String? url, {
    String? password,
    _i8.EventHandler? fallbackEventHandler,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [url],
          {
            #password: password,
            #fallbackEventHandler: fallbackEventHandler,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i2.GetActionsResponse> getActions() => (super.noSuchMethod(
        Invocation.method(
          #getActions,
          [],
        ),
        returnValue:
            _i7.Future<_i2.GetActionsResponse>.value(_FakeGetActionsResponse_0(
          this,
          Invocation.method(
            #getActions,
            [],
          ),
        )),
      ) as _i7.Future<_i2.GetActionsResponse>);

  @override
  _i7.Future<_i9.StreamerBotAction?> getAction(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAction,
          [id],
        ),
        returnValue: _i7.Future<_i9.StreamerBotAction?>.value(),
      ) as _i7.Future<_i9.StreamerBotAction?>);

  @override
  _i7.Future<_i3.DoActionResponse> doAction({
    required String? id,
    required String? name,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #doAction,
          [],
          {
            #id: id,
            #name: name,
            #args: args,
          },
        ),
        returnValue:
            _i7.Future<_i3.DoActionResponse>.value(_FakeDoActionResponse_1(
          this,
          Invocation.method(
            #doAction,
            [],
            {
              #id: id,
              #name: name,
              #args: args,
            },
          ),
        )),
      ) as _i7.Future<_i3.DoActionResponse>);
}
