{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset238 Times New Roman;}{\f1\fswiss\fprq0\fcharset0 Verdana;}{\f2\fswiss\fprq2\fcharset238 Arial;}{\f3\fswiss\fprq0\fcharset0 Verdana;}{\f4\fmodern\fprq1\fcharset0 Courier New;}{\f5\fnil\fprq2\fcharset238 MS Mincho;}{\f6\fnil\fprq2\fcharset238 MS Mincho;}{\f7\fnil\fprq2\fcharset238 Tahoma;}{\f8\fnil\fprq0\fcharset238 Tahoma;}}
{\colortbl;\red0\green0\blue0;\red153\green0\blue255;\red128\green128\blue128;}
{\stylesheet{\s1\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029\snext1 Normal;}
{\s2\sb240\sa120\keepn\rtlch\af7\afs28\lang255\ltrch\dbch\af5\langfe255\hich\f2\fs28\lang1029\loch\f2\fs28\lang1029\sbasedon1\snext3 Heading;}
{\s3\sa120\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029\sbasedon1\snext3 Body Text;}
{\s4\sa120\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029\sbasedon3\snext4 List;}
{\s5\sb120\sa120\rtlch\af8\afs24\lang255\ai\ltrch\dbch\langfe255\hich\fs24\lang1029\i\loch\fs24\lang1029\i\sbasedon1\snext5 caption;}
{\s6\rtlch\af8\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029\sbasedon1\snext6 Index;}
{\s7\sb240\sa120\keepn\rtlch\af2\afs28\lang255\ltrch\dbch\af6\langfe255\hich\f2\fs28\lang1029\loch\f2\fs28\lang1029\sbasedon1\snext3 Heading;}
{\s8\sb120\sa120\rtlch\afs24\lang255\ai\ltrch\dbch\langfe255\hich\fs24\lang1029\i\loch\fs24\lang1029\i\sbasedon1\snext8 caption;}
{\s9\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029\sbasedon1\snext9 Index;}
}
{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern6800}}\deftab709
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt0 Standard;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s1\qc\sa283\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\cf2\rtlch\ltrch\hich\fs28\lang1033\b\loch\fs28\lang1033\b HID macros}}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 \line \line This utility gives you better control of multiple keyboards and mouses connected to the same computer. Normally Windows don't recognize different keyboards and all keystrokes appear to be just from one standard keyboard. The same for mouse \'96 al
l clicks and wheel scroll seem to be coming from one system mouse. With this utility you can define macro triggered by unique keyboard - key (or mouse \'96 mouse button) combination. The macro can send either another keystroke sequence to active application, 
launch external program or send SimConnect event to MS Flight Simulator X Deluxe. Additional keyboards and mouses are connected via USB. Cheap PS2 -> USB convertors are available on the market.\line \line }{\ul\ulc0\rtlch\ltrch\hich\fs20\lang1033\b\loch\fs20\lang1033\b Devices sheet}{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 \line The grid shows all keyboards and mouses detecte
d in your system. New devices have generated name (Keyb1, Keyb2, Mouse1...) however you can rename them by clicking on its name when device is selected. This gives you better orientation during macro definition.\line \line }{\ul\ulc0\rtlch\ltrch\hich\fs20\lang1033\b\loch\fs20\lang1033\b Macros sheet}{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 \line On left side you have list of 
all macros. You can add and remove them by buttons above the list. On right side you have all details related to selected macro. You can define following items:}}
\par \pard\plain \ltrpar\s1\li707\ri0\lin707\rin0\fi-283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029 {\rtlch \ltrch\loch \'95}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{ \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 name: Name of the macro. When macro has no trigger defined (keyboard-key, mouse-button) or name of the keyboard/mouse is not linked to specific device detected in the system, the name is shown in red color. }}
\par \pard\plain \ltrpar\s1\li707\ri0\lin707\rin0\fi-283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029 {\rtlch \ltrch\loch \'95}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{ \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 trigger: device - key/button combination which starts defined action. To change this value, pres button Scan }}
\par \pard\plain \ltrpar\s1\li707\ri0\lin707\rin0\fi-283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029 {\rtlch \ltrch\loch \'95}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{ \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 Keyboard sequence: sequence of keystrokes that is sent to active window when macro action is executed. Complex sequence with Shift, Ctrl keys can be defined. See format definition in appendix. }}
\par \pard\plain \ltrpar\s1\li707\ri0\lin707\rin0\fi-283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029 {\rtlch \ltrch\loch \'95}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{ \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 SimConnect event: Name of event that is sent to Microsoft Flight Simulator X via SimConnect interface. To use this option you must have FSX and SimConnect (available in Deluxe version) properly loaded. Available event names are listed in combo box. Descr
iption for every event can be found in FSX SDK. }}
\par \pard\plain \ltrpar\s1\li707\ri0\lin707\rin0\fi-283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029 {\rtlch \ltrch\loch \'95}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{ \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 Params: Some SimConnect events can have parameters. With parameter you can e.g. select specific value of heading bug, tune some frequency at radios etc. This parameter is always integer value and you can define such value in this field. If you type in so
me integer, it is simply sent as event argument to FSX. However you can define several integers separated by semicolon (;) and then after each macro activation next value from the list is used. For example if you define HEADING_BUG_SET event for heading bu
g with parameter "0;90;180;270" then with each macro activation heading bug will be set to north, then to east, south, west north again etc. The number displayed after edit field shows how many values were identified as parameters. For the example above th
at would be {\*\bkmkstart DDE_LINK}4. }}
\par \pard\plain \ltrpar\s1\li707\ri0\lin707\rin0\fi-283\sa283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029 {\rtlch \ltrch\loch \'95}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{ \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 With text notification: when th{\*\bkmkend DDE_LINK}is box is checked the macro name is displayed in FSX as text for 3 seconds. This can help you to be sure that macro was triggered. Active parameter value is included when parameters are used. This is quite useful when you d
efine macro with multiple parameters. With text notification you can see what value was currently sent to FSX.}}
\par \pard\plain \ltrpar\s1\li707\ri0\lin707\rin0\fi-283\sa283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029 {\rtlch \ltrch\loch {\*\bkmkend DDE_LINK1}\'95}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{ \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 Run application: Selecting this option you can execute any application. Use button \'93...\'94 to browse for existing application.}}
\par \pard\plain \ltrpar\s1\sa283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 \line }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\ul\ulc0\rtlch\ltrch\hich\fs20\lang1033\b\loch\fs20\lang1033\b Test area}{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 \line In the top-right part of Macros sheet you can see available information about last input event - keyboard name and key code or mouse name and button/wheel.\line \line }{\ul\ulc0\rtlch\ltrch\hich\fs20\lang1033\b\loch\fs20\lang1033\b Hardware configuration changes}{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 \line Macros are always assigned to keyboard/mouse by device's 
name. This gives you the possibility to keep your macros definition when you connect different keyboard or mouse. For example when new keyboard is connected it will appear in keyboards list and new name is generated. Easy. But what happens when you disconn
ect old keyboard? Will you lose all your macros assigned to the keyboard? No no. They will stay in the list but name will be marked by red color - indicating that this macro is not assigned to existing keyboard. You can even scan new trigger key or at Devi
ces tab sheet you can rename some existing keyboard to the name, that was assigned to the old one you've disconnected. All macros with this keyboard name will be linked to your physical keyboard automatically.\line \line When SimConnect is available application trie
s to connect to FSX automatically during start. If it is not connected you can always try to connect with button SimConnect.\line Macros definition is saved/loaded automatically from ini file in application directory. If you need to create several configuration
s (profiles) you can execute the application with one parameter which would be a name of configuration file. It gives you the possibility to define several configurations e.g. for different aircrafts.\line }}
\par \pard\plain \ltrpar\s1\sa283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\ul\ulc0\rtlch\ltrch\hich\fs20\lang1033\b\loch\fs20\lang1033\b Limitations}}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 \line With mouse buttons you have the possibility to link different macros for button press and button release. The idea behind is to give tool for cockpit builders for toggle switches connected as mouse button. However it seems windows mouse driver 
doesn't like to have some mouse button pressed permanently. Even if the windows message is not sent to windows for processing, you can not e.g. switch to different window by mouse click if some button is pressed. So you can safely use press/release events 
but having mouse button permanently pressed by toggle switch is not recommended.}}
\par \pard\plain \ltrpar\s1\sa283\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1029\loch\fs24\lang1029{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\rtlch\ltrch\hich\fs20\lang1033\loch\fs20\lang1033 On windows keyboard all standard keys are supported. Even if so called \'93multimedia\'94 keys are detected by HIDmacros they can not fire macros because of different handling in windows API. Also using Alt and F10 keys for macros is not recommended.  \line \line }}{\rtlch \ltrch\loch\f1\fs24\lang1029\i0\b0{\ul\ulc0\rtlch\ltrch\hich\fs20\lang1033\b\loch\fs20\lang1033\b Appendix
: Supported modifiers for keystroke sequence}}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 + = Shift}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 ^ = Control}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 % = Alt}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 Surround sequences of characters or key names with parentheses in order to}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 modify them as a group.  For example, '+abc' shifts only 'a', while '+(abc)' shifts}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 all three characters.}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 Supported special characters}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 ~ = Enter}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 ( = Begin modifier group (see above)}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 ) = End modifier group (see above)}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 \{ = Begin key name text (see below)}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 \} = End key name text (see below)}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 Supported characters:}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 Any character that can be typed is supported.  Surround the modifier keys}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 listed above with braces in order to send as normal text.}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 Supported key names (surround these with braces):}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 BKSP, BS, BACKSPACE}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 BREAK}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 CAPSLOCK}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 CLEAR}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 DEL}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 DELETE}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 DOWN}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 END}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 ENTER}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 ESC}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 ESCAPE}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F1}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F2}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F3}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F4}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F5}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F6}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F7}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F8}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F9}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F10}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F11}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F12}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F13}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F14}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F15}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 F16}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 HELP}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 HOME}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 INS}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 LEFT}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 NUMLOCK}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 PGDN}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 PGUP}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 PRTSC}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 RIGHT}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 SCROLLLOCK}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 TAB}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 UP}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 Follow the keyname with a space and a number to send the specified key a}
\par \pard\plain \ltrpar\s1\li86\ri86\lin86\rin86\fi0\sb86\sa283\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs20\lang1033\loch\f4\fs20\lang1033 {\rtlch \ltrch\loch\f4\fs20\lang1033\i0\b0 given number of times (e.g., \{left 6\}).}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe255\hich\fs20\lang1033\loch\fs20\lang1033 
\par }